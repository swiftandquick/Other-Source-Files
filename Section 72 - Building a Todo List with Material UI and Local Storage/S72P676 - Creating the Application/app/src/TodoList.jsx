import List from "@mui/material/List";
import TodoItem from "./TodoItem";
import TodoForm from "./TodoForm";
import { Box, Typography } from "@mui/material";

import { useState, useEffect } from "react";

// getInitialData retrieves saved data from localStorage, so when the page is loaded, my saved todo items from localStorage will be displayed.  
const getInitialData = () => {
  const data = JSON.parse(localStorage.getItem("todos"));
  if (!data) return [];
  return data;
};

export default function TodoList() {
  // Set the todos equal to the returned value of the getInitialData function, which returns whatever is stored in localStorage.  
  // setTodos is a state function that changes todos' value.  
  const [todos, setTodos] = useState(getInitialData);

  // Whenever the component is rendered, add the new todos array into localStorage.   
  useEffect(() => {
    localStorage.setItem("todos", JSON.stringify(todos));
  }, [todos]);

  // removeTodo removes an item from the todos array using the filter method, remove an item based on id.  
  const removeTodo = (id) => {
    setTodos((prevTodos) => {
      return prevTodos.filter((t) => t.id !== id);
    });
  };

  // toggleTodo lets me decide the todo item's status, whether it's completed or not.  
  // If I check the checkbox, completed is true, if I uncheck the checkbox, completed become false.  
  const toggleTodo = (id) => {
    setTodos((prevTodos) => {
      return prevTodos.map((todo) => {
        if (todo.id === id) {
          return { ...todo, completed: !todo.completed };
        } else {
          return todo;
        }
      });
    });
  };

  // addTodo adds an object to the todos array, each object contains text, id generated by UUID, and the completed boolean variable, which starts off as false.  
  const addTodo = (text) => {
    setTodos((prevTodos) => {
      return [
        ...prevTodos,
        { text: text, id: crypto.randomUUID(), completed: false },
      ];
    });
  };

  // Return a Box component containing a List component, which contains the TodoItem component.  
  // For the TodoItem component, set key to current todos object's id, pass in removeTodo function as a value for the remove prop, 
  // and an anoynomous function that invokes toggleTodo function as the value for the toggle prop.  
  // For the TodoForm component, pass in addTodo function as the value for the prop of the same name.     
  return (
    <Box
      sx={{
        display: "flex",
        justifyContent: "center",
        flexDirection: "column",
        alignItems: "center",
        m: 3,
      }}
    >
      <Typography variant="h2" component="h1" sx={{ flexGrow: 1 }}>
        Todos
      </Typography>
      <List sx={{ width: "100%", maxWidth: 360, bgcolor: "background.paper" }}>
        {todos.map((todo) => (
          <TodoItem
            todo={todo}
            key={todo.id}
            remove={removeTodo}
            toggle={() => toggleTodo(todo.id)}
          />
        ))}
        <TodoForm addTodo={addTodo} />
      </List>
    </Box>
  );
}